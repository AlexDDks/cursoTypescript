{"id":"src/User.ts","dependencies":[{"name":"D:\\OneDrive - Instituto Politecnico Nacional\\Curso Typescript\\51. My first app\\package.json","includedInParent":true,"mtime":1663630171038},{"name":"faker","loc":{"line":7,"column":38,"index":283},"parent":"D:\\OneDrive - Instituto Politecnico Nacional\\Curso Typescript\\51. My first app\\src\\User.ts","resolved":"D:\\OneDrive - Instituto Politecnico Nacional\\Curso Typescript\\51. My first app\\node_modules\\faker\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.User = void 0;\n\nvar faker_1 = __importDefault(require(\"faker\")); //Para importar a una libreria instalada con npm, tenemos que llamarla de este modo. Lo que hace es entrar a nuestra carpeta de node_modules, buscará el módulo correspondiente y agregará toda su funcionalidad a la variable faker (la que no tiene comillas)\n// Le colocamos la palabra reservada export para que esta clase pueda ser importada en nuestro entrypoint\n\n\nvar User =\n/** @class */\nfunction () {\n  // En la documentación vamos a encontrar qué modulo utilizar para cada propiedad de nuestra clase, por lo que basta revisarlo para ver cómo llegar a ella.\n  //En este paso indicamos el valor de las propiedades las cuales serán inicializadas cuando se instancie la clase en el archivo index.ts\n  function User() {\n    this.name = faker_1.default.name.firstName();\n    this.location = {\n      lat: 20.610868,\n      // parseFloat(faker.address.latitude()),\n      lng: -100.405285 // parseFloat(faker.address.longitude())\n      // Utilizamos el parseFloat para convertir a number el string que nos devuelven las funciones latitude y longitude de faker\n\n    };\n  }\n\n  User.prototype.markerContent = function () {\n    return \"User's name is: \" + this.name;\n  };\n\n  return User;\n}();\n\nexports.User = User; // // En JS el constructor se coloca como:\n// function Cliente(nombre, fecha, direccion) // { Esta línea funciona como la palabra reservada constructor(), pero no recibe parámetros ya que se inicializa cuando la clase es instanciada en el index.ts\n//     this._nombre = nombre;\n//     this._fechaNacimiento = fecha;\n//     this._direccion = direccion;\n// }\n// // Instanciando:\n// const cliente= new Cliente(nombre, fecha, direccion)"},"sourceMaps":{"js":{"mappings":[{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":4}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":11}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":14}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":29}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":30}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":37}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":38}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":45}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":46}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":47}},{"source":"src/User.ts","name":null,"original":{"line":1,"column":26},"generated":{"line":14,"column":49}},{"source":"src/User.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":15,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":18,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":18,"column":4}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":18,"column":8}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":19,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":12}},{"source":"src/User.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":21,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":22,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":23,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":23,"column":11}},{"source":"src/User.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":23,"column":15}},{"source":"src/User.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":23,"column":18}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":24,"column":4}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":24,"column":9}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":24,"column":13}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":24,"column":16}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":24,"column":23}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":24,"column":24}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":24,"column":31}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":24},"generated":{"line":24,"column":32}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":24,"column":36}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":29},"generated":{"line":24,"column":37}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":24,"column":46}},{"source":"src/User.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":24,"column":48}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":25,"column":4}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":13},"generated":{"line":25,"column":9}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":25,"column":17}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":25,"column":20}},{"source":"src/User.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":26,"column":6}},{"source":"src/User.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":26,"column":9}},{"source":"src/User.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":26,"column":11}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":26,"column":20}},{"source":"src/User.ts","name":null,"original":{"line":21,"column":12},"generated":{"line":27,"column":6}},{"source":"src/User.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":28,"column":6}},{"source":"src/User.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":28,"column":9}},{"source":"src/User.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":28,"column":11}},{"source":"src/User.ts","name":null,"original":{"line":22,"column":17},"generated":{"line":28,"column":12}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":28,"column":22}},{"source":"src/User.ts","name":null,"original":{"line":23,"column":12},"generated":{"line":28,"column":23}},{"source":"src/User.ts","name":null,"original":{"line":24,"column":12},"generated":{"line":29,"column":6}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":31,"column":4}},{"source":"src/User.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":31,"column":5}},{"source":"src/User.ts","name":null,"original":{"line":26,"column":5},"generated":{"line":32,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":6}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":7}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":16}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":17}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":30}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":33}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":45}},{"source":"src/User.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":35,"column":4}},{"source":"src/User.ts","name":null,"original":{"line":29,"column":15},"generated":{"line":35,"column":11}},{"source":"src/User.ts","name":null,"original":{"line":29,"column":36},"generated":{"line":35,"column":32}},{"source":"src/User.ts","name":null,"original":{"line":29,"column":41},"generated":{"line":35,"column":37}},{"source":"src/User.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":35,"column":41}},{"source":"src/User.ts","name":null,"original":{"line":30,"column":5},"generated":{"line":36,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":36,"column":3}},{"source":"src/User.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":38,"column":2}},{"source":"src/User.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":38,"column":9}},{"source":"src/User.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":38,"column":13}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":39,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":39,"column":1}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":39,"column":3}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":41,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":41,"column":7}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":41,"column":8}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":41,"column":12}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":41,"column":15}},{"source":"src/User.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":41,"column":19}},{"source":"src/User.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":41,"column":21}},{"source":"src/User.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":42,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":43,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":44,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":45,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":46,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":47,"column":0}},{"source":"src/User.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":48,"column":0}}],"sources":{"src/User.ts":"import faker from \"faker\" //Para importar a una libreria instalada con npm, tenemos que llamarla de este modo. Lo que hace es entrar a nuestra carpeta de node_modules, buscará el módulo correspondiente y agregará toda su funcionalidad a la variable faker (la que no tiene comillas)\r\nimport {Instancer} from \"./CustomMap\" //Importamos la interface para darle más pistas a TS de que la clase User satisfaga las condiciones de la interface Instancer\r\n\r\n// Le colocamos la palabra reservada export para que esta clase pueda ser importada en nuestro entrypoint\r\nexport class User implements Instancer{\r\n    //implements Instancer le dice a TS que esta clase debe de satisfacer las propiedades de la interface Instancer, así cuando tengamos un error en la instancia de esta clase por ejemplo y nos falte satisfacer alguna propiedad correspondiente, entonces TS nos dirá cuál es es el error y dónde se encuentra EXACTAMENTE(en este caso interface Instancer), lo cual hace que todo sea relativamente más fácil.\r\n    name: string;\r\n    location:{\r\n        // En la documentación veremos que el faker entrega un string para las funciones latitud y longitud, por lo que tendremos que hacer la correspondiente conversión de string a number, lo cual hicimos en el constructor\r\n        lat:number;                                                                                                                                        \r\n        lng:number;\r\n    };\r\n\r\n    // En la documentación vamos a encontrar qué modulo utilizar para cada propiedad de nuestra clase, por lo que basta revisarlo para ver cómo llegar a ella.\r\n    \r\n    //En este paso indicamos el valor de las propiedades las cuales serán inicializadas cuando se instancie la clase en el archivo index.ts\r\n    constructor(){\r\n        this.name=faker.name.firstName();\r\n        this.location={\r\n            lat:20.610868,\r\n            // parseFloat(faker.address.latitude()),\r\n            lng:-100.405285\r\n            // parseFloat(faker.address.longitude())\r\n            // Utilizamos el parseFloat para convertir a number el string que nos devuelven las funciones latitude y longitude de faker\r\n        }\r\n    }\r\n\r\n    markerContent():string{\r\n        return \"User's name is: \" + this.name;\r\n    }\r\n}\r\n\r\n// // En JS el constructor se coloca como:\r\n\r\n// function Cliente(nombre, fecha, direccion) // { Esta línea funciona como la palabra reservada constructor(), pero no recibe parámetros ya que se inicializa cuando la clase es instanciada en el index.ts\r\n \r\n//     this._nombre = nombre;\r\n//     this._fechaNacimiento = fecha;\r\n//     this._direccion = direccion;\r\n// }\r\n\r\n// // Instanciando:\r\n\r\n// const cliente= new Cliente(nombre, fecha, direccion)"},"lineCount":null}},"error":null,"hash":"339dd19e1901bab4d3b718b7f2aadc30","cacheData":{"env":{}}}